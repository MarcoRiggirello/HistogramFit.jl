var documenterSearchIndex = {"docs":
[{"location":"api/#API","page":"Reference","title":"API","text":"","category":"section"},{"location":"api/","page":"Reference","title":"Reference","text":"Modules = [HistogramsFit]\nOrder   = [:type, :function]","category":"page"},{"location":"api/#HistogramsFit.MultinomialBinsModel","page":"Reference","title":"HistogramsFit.MultinomialBinsModel","text":"MultinomialBinsModel{N,T,U,J} <: AbstractHistogramFitModel{N,J}\n\nThis struct stores all the informations needed to construct a χ² statistics where the bins respect a multinomial distribution.\n\nnote: Note\nThis statistics should be used whenever the total number of events is fixed by the measurement you performed. \n\n\n\n\n\n","category":"type"},{"location":"api/#HistogramsFit.PoissonianBinsModel","page":"Reference","title":"HistogramsFit.PoissonianBinsModel","text":"PoissonianBinsModel{N,T,U,J} <: AbstractHistogramFitModel{N,J}\n\nThis struct stores all the informations needed to construct a χ² statistics where all the bins have an independent poissonian distribution.\n\nnote: Note\nThis statistics should be used whenever the total number of events is not fixed by the measurement you performed. \n\n\n\n\n\n","category":"type"},{"location":"tutorials_gen/hep/","page":"-","title":"-","text":"EditURL = \"../../tutorials/hep.jl\"","category":"page"},{"location":"tutorials_gen/hep/","page":"-","title":"-","text":"todo: Todo\nMake the tutorial!","category":"page"},{"location":"tutorials_gen/hep/","page":"-","title":"-","text":"","category":"page"},{"location":"tutorials_gen/hep/","page":"-","title":"-","text":"This page was generated using Literate.jl.","category":"page"},{"location":"tutorials_gen/simple/","page":"Histogram fitting basics","title":"Histogram fitting basics","text":"EditURL = \"../../tutorials/simple.jl\"","category":"page"},{"location":"tutorials_gen/simple/#Histogram-fitting-basics","page":"Histogram fitting basics","title":"Histogram fitting basics","text":"","category":"section"},{"location":"tutorials_gen/simple/","page":"Histogram fitting basics","title":"Histogram fitting basics","text":"We want to fit Normal-distributed data to find the distribution parameters","category":"page"},{"location":"tutorials_gen/simple/","page":"Histogram fitting basics","title":"Histogram fitting basics","text":"using StatsBase, HistogramsFit\nusing Plots\nusing ForwardDiff, DifferentiationInterface\nusing Optimization, OptimizationOptimJL\nimport Random #hide\nRandom.seed!(1); # hide\n\ndata = randn(10_000)\nnothing # hide","category":"page"},{"location":"tutorials_gen/simple/#Data-generation-and-model-definition","page":"Histogram fitting basics","title":"Data generation and model definition","text":"","category":"section"},{"location":"tutorials_gen/simple/","page":"Histogram fitting basics","title":"Histogram fitting basics","text":"We use the StatsBase histogram to store the data. Our histogram is made by bins of with 0.1 in the range -3:3.","category":"page"},{"location":"tutorials_gen/simple/","page":"Histogram fitting basics","title":"Histogram fitting basics","text":"h = Histogram(-3:0.1:3)\nappend!(h, data)\nplot(h, label=\"data\")","category":"page"},{"location":"tutorials_gen/simple/","page":"Histogram fitting basics","title":"Histogram fitting basics","text":"Then we define the curve we want to fit the histogram with. The function has to be of the form f(data, parameters) in order to work with HistogramsFit","category":"page"},{"location":"tutorials_gen/simple/","page":"Histogram fitting basics","title":"Histogram fitting basics","text":"function gaus(x, p)\n    N, μ, σ = p\n    return N / √(2π * σ^2) * exp(-(x[1] - μ)^2 / (2 * σ^2))\nend","category":"page"},{"location":"tutorials_gen/simple/#Fitting-the-histogram","page":"Histogram fitting basics","title":"Fitting the histogram","text":"","category":"section"},{"location":"tutorials_gen/simple/","page":"Histogram fitting basics","title":"Histogram fitting basics","text":"Now we want to find the values of the parameters of our model that best fit our data. The number of events is not fixed by our \"experiment\" hence we should use a independent Poissonian statistics for the bin population:","category":"page"},{"location":"tutorials_gen/simple/","page":"Histogram fitting basics","title":"Histogram fitting basics","text":"pbm = PoissonianBinsModel(h, gaus, (:N, :μ, :σ))","category":"page"},{"location":"tutorials_gen/simple/","page":"Histogram fitting basics","title":"Histogram fitting basics","text":"todo: Todo\nimprove model display","category":"page"},{"location":"tutorials_gen/simple/","page":"Histogram fitting basics","title":"Histogram fitting basics","text":"Now we can use the chisquare_statistics method to generate the function to be minimized The p parameter is requested by Optimization but it is not used by us","category":"page"},{"location":"tutorials_gen/simple/","page":"Histogram fitting basics","title":"Histogram fitting basics","text":"f(α, p) = chisquare_statistics(pbm, α)\ninitial_params = [100.0, 1.0, 10.0] # far from the answer on purpose","category":"page"},{"location":"tutorials_gen/simple/","page":"Histogram fitting basics","title":"Histogram fitting basics","text":"And we are ready to use Optimization! We can mix and match the optimization algorithm and the automatic differentiation (AD) method we like. Let's use the robust BFGS() and ForwardDiff()","category":"page"},{"location":"tutorials_gen/simple/","page":"Histogram fitting basics","title":"Histogram fitting basics","text":"optf = OptimizationFunction(f, Optimization.AutoForwardDiff())\nprob = OptimizationProblem(optf, initial_params, 1.0)\nsol = solve(prob, Optim.BFGS())","category":"page"},{"location":"tutorials_gen/simple/","page":"Histogram fitting basics","title":"Histogram fitting basics","text":"todo: Todo\nadd details about the optimizer options","category":"page"},{"location":"tutorials_gen/simple/#Parameters-error-and-goodness-of-fit-check","page":"Histogram fitting basics","title":"Parameters error and goodness-of-fit check","text":"","category":"section"},{"location":"tutorials_gen/simple/","page":"Histogram fitting basics","title":"Histogram fitting basics","text":"The number of degrees of freedom is","category":"page"},{"location":"tutorials_gen/simple/","page":"Histogram fitting basics","title":"Histogram fitting basics","text":"dof = length(HistogramsFit.bincounts(pbm)) - length(sol.u)","category":"page"},{"location":"tutorials_gen/simple/","page":"Histogram fitting basics","title":"Histogram fitting basics","text":"while the χ² statistics in the optimal parameters is","category":"page"},{"location":"tutorials_gen/simple/","page":"Histogram fitting basics","title":"Histogram fitting basics","text":"χ² = chisquare_statistics(pbm, sol.u)","category":"page"},{"location":"tutorials_gen/simple/","page":"Histogram fitting basics","title":"Histogram fitting basics","text":"perhaps, the χ² is in the range","category":"page"},{"location":"tutorials_gen/simple/","page":"Histogram fitting basics","title":"Histogram fitting basics","text":"dof - √dof ≤ χ² ≤ dof + √dof","category":"page"},{"location":"tutorials_gen/simple/","page":"Histogram fitting basics","title":"Histogram fitting basics","text":"as expected for a good fit.","category":"page"},{"location":"tutorials_gen/simple/","page":"Histogram fitting basics","title":"Histogram fitting basics","text":"We can use AD to compute the covariance matrix as well","category":"page"},{"location":"tutorials_gen/simple/","page":"Histogram fitting basics","title":"Histogram fitting basics","text":"covm = inv(hessian(x -> chisquare_statistics(pbm, x), AutoForwardDiff(), sol.u))","category":"page"},{"location":"tutorials_gen/simple/","page":"Histogram fitting basics","title":"Histogram fitting basics","text":"Hence we have","category":"page"},{"location":"tutorials_gen/simple/","page":"Histogram fitting basics","title":"Histogram fitting basics","text":"for (i, n) in enumerate(pbm.params_names)\n    println(\"$n = $(sol.u[i]) ± $(√covm[i,i])\")\nend","category":"page"},{"location":"tutorials_gen/simple/#Plot-the-fit","page":"Histogram fitting basics","title":"Plot the fit","text":"","category":"section"},{"location":"tutorials_gen/simple/","page":"Histogram fitting basics","title":"Histogram fitting basics","text":"plot(h, label=\"data\")\nx = range(-3, 3, length=100)\ny = 0.1gaus.(x, (sol.u,)) # to plot correctly we have to multiply by the bin width.\nplot!(x, y, label=\"fit\")","category":"page"},{"location":"tutorials_gen/simple/","page":"Histogram fitting basics","title":"Histogram fitting basics","text":"","category":"page"},{"location":"tutorials_gen/simple/","page":"Histogram fitting basics","title":"Histogram fitting basics","text":"This page was generated using Literate.jl.","category":"page"},{"location":"#Welcome-to-HistrogramsFit.jl's-documentation","page":"Home","title":"Welcome to HistrogramsFit.jl's documentation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The problem of fitting curves to histograms is ubiquitous in High Energy Physics (HEP) and usually it involves three steps:","category":"page"},{"location":"","page":"Home","title":"Home","text":"Determining the \"best fit\" parameters of a curve;\nDetermining the errors on the parameters;\nJudging the goodness of the fit. ","category":"page"},{"location":"","page":"Home","title":"Home","text":"This simple Julia module takes an nD histogram and a data distribution model and creates a theoretically sound chi square statistics that can be used to perform","category":"page"},{"location":"","page":"Home","title":"Home","text":"Point estimation;\nConfidence interval estimation;\nGoodness-of-fit testing.","category":"page"},{"location":"","page":"Home","title":"Home","text":"warning: Warning\nThis is still a work in progress and it is in pre-alpha stage. Expect issues and bug. If you want to contribute, please feel free to open a issue/start a discussion on GitHub! Thank you!","category":"page"}]
}
